--- Old/com/mojang/minecraft/level/LevelGen.java	2021-07-18 13:06:06.661317000 +0200
+++ New/com/mojang/minecraft/level/LevelGen.java	2021-08-07 19:31:08.656306500 +0200
@@ -16,14 +16,14 @@
    }
 
    public byte[] generateMap() {
-      int w = this.width;
-      int h = this.height;
-      int d = this.depth;
+      int w = width;
+      int h = height;
+      int d = depth;
       int[] heightmap1 = (new NoiseMap(0)).read(w, h);
       int[] heightmap2 = (new NoiseMap(0)).read(w, h);
       int[] cf = (new NoiseMap(1)).read(w, h);
       int[] rockMap = (new NoiseMap(1)).read(w, h);
-      byte[] blocks = new byte[this.width * this.height * this.depth];
+      byte[] blocks = new byte[width * height * depth];
 
       int x;
       int y;
@@ -31,9 +31,9 @@
       for(x = 0; x < w; ++x) {
          for(y = 0; y < d; ++y) {
             for(int z = 0; z < h; ++z) {
-               int dh1 = heightmap1[x + z * this.width];
-               int dh2 = heightmap2[x + z * this.width];
-               length = cf[x + z * this.width];
+               int dh1 = heightmap1[x + z * width];
+               int dh2 = heightmap2[x + z * width];
+               length = cf[x + z * width];
                if (length < 128) {
                   dh2 = dh1;
                }
@@ -44,12 +44,12 @@
                }
 
                dh = dh / 8 + d / 3;
-               int rh = rockMap[x + z * this.width] / 8 + d / 3;
+               int rh = rockMap[x + z * width] / 8 + d / 3;
                if (rh > dh - 2) {
                   rh = dh - 2;
                }
 
-               int i = (y * this.height + z) * this.width + x;
+               int i = (y * height + z) * width + x;
                int id = 0;
                if (y == dh) {
                   id = Tile.grass.id;
@@ -71,37 +71,37 @@
       x = w * h * d / 256 / 64;
 
       for(y = 0; y < x; ++y) {
-         float x = this.random.nextFloat() * (float)w;
-         float y = this.random.nextFloat() * (float)d;
-         float z = this.random.nextFloat() * (float)h;
-         length = (int)(this.random.nextFloat() + this.random.nextFloat() * 150.0F);
-         float dir1 = (float)((double)this.random.nextFloat() * 3.141592653589793D * 2.0D);
+         float x2 = random.nextFloat() * (float)w;
+         float y2 = random.nextFloat() * (float)d;
+         float z = random.nextFloat() * (float)h;
+         length = (int)(random.nextFloat() + random.nextFloat() * 150.0F);
+         float dir1 = (float)((double)random.nextFloat() * Math.PI * 2.0D);
          float dira1 = 0.0F;
-         float dir2 = (float)((double)this.random.nextFloat() * 3.141592653589793D * 2.0D);
+         float dir2 = (float)((double)random.nextFloat() * Math.PI * 2.0D);
          float dira2 = 0.0F;
 
          for(int l = 0; l < length; ++l) {
-            x = (float)((double)x + Math.sin((double)dir1) * Math.cos((double)dir2));
+            x2 = (float)((double)x2 + Math.sin((double)dir1) * Math.cos((double)dir2));
             z = (float)((double)z + Math.cos((double)dir1) * Math.cos((double)dir2));
-            y = (float)((double)y + Math.sin((double)dir2));
+            y2 = (float)((double)y2 + Math.sin((double)dir2));
             dir1 += dira1 * 0.2F;
             dira1 *= 0.9F;
-            dira1 += this.random.nextFloat() - this.random.nextFloat();
+            dira1 += random.nextFloat() - random.nextFloat();
             dir2 += dira2 * 0.5F;
             dir2 *= 0.5F;
             dira2 *= 0.9F;
-            dira2 += this.random.nextFloat() - this.random.nextFloat();
-            float size = (float)(Math.sin((double)l * 3.141592653589793D / (double)length) * 2.5D + 1.0D);
+            dira2 += random.nextFloat() - random.nextFloat();
+            float size = (float)(Math.sin((double)l * Math.PI / (double)length) * 2.5D + 1.0D);
 
-            for(int xx = (int)(x - size); xx <= (int)(x + size); ++xx) {
-               for(int yy = (int)(y - size); yy <= (int)(y + size); ++yy) {
+            for(int xx = (int)(x2 - size); xx <= (int)(x2 + size); ++xx) {
+               for(int yy = (int)(y2 - size); yy <= (int)(y2 + size); ++yy) {
                   for(int zz = (int)(z - size); zz <= (int)(z + size); ++zz) {
-                     float xd = (float)xx - x;
-                     float yd = (float)yy - y;
+                     float xd = (float)xx - x2;
+                     float yd = (float)yy - y2;
                      float zd = (float)zz - z;
                      float dd = xd * xd + yd * yd * 2.0F + zd * zd;
-                     if (dd < size * size && xx >= 1 && yy >= 1 && zz >= 1 && xx < this.width - 1 && yy < this.depth - 1 && zz < this.height - 1) {
-                        int ii = (yy * this.height + zz) * this.width + xx;
+                     if (dd < size * size && xx >= 1 && yy >= 1 && zz >= 1 && xx < width - 1 && yy < depth - 1 && zz < height - 1) {
+                        int ii = (yy * height + zz) * width + xx;
                         if (blocks[ii] == Tile.rock.id) {
                            blocks[ii] = 0;
                         }
