--- Old/com/mojang/minecraft/comm/SocketServer.java	2021-07-18 13:06:06.642004300 +0200
+++ New/com/mojang/minecraft/comm/SocketServer.java	2021-08-07 19:43:21.148813600 +0200
@@ -13,7 +13,7 @@
 public class SocketServer {
    private ServerSocketChannel ssc;
    private ServerListener serverListener;
-   private List connections = new LinkedList();
+   private List<SocketConnection> connections = new LinkedList<>();
    protected static Logger logger = Logger.getLogger("SocketServer");
 
    public SocketServer(byte[] ips, int port, ServerListener serverListener) throws IOException {
@@ -26,30 +26,30 @@
 
    public void tick() throws IOException {
       SocketChannel socketChannel;
-      while((socketChannel = this.ssc.accept()) != null) {
+      while((socketChannel = ssc.accept()) != null) {
          try {
             logger.log(Level.INFO, socketChannel.socket().getRemoteSocketAddress() + " connected");
             socketChannel.configureBlocking(false);
             SocketConnection socketConnection = new SocketConnection(socketChannel);
-            this.connections.add(socketConnection);
-            this.serverListener.clientConnected(socketConnection);
+            connections.add(socketConnection);
+            serverListener.clientConnected(socketConnection);
          } catch (IOException var6) {
             socketChannel.close();
             throw var6;
          }
       }
 
-      for(int i = 0; i < this.connections.size(); ++i) {
-         SocketConnection socketConnection = (SocketConnection)this.connections.get(i);
+      for(int i = 0; i < connections.size(); ++i) {
+         SocketConnection socketConnection = (SocketConnection)connections.get(i);
          if (!socketConnection.isConnected()) {
             socketConnection.disconnect();
-            this.connections.remove(i--);
+            connections.remove(i--);
          } else {
             try {
                socketConnection.tick();
             } catch (Exception var5) {
                socketConnection.disconnect();
-               this.serverListener.clientException(socketConnection, var5);
+               serverListener.clientException(socketConnection, var5);
             }
          }
       }
