--- Old/com/mojang/minecraft/character/Cube.java	2021-07-18 13:06:06.637989200 +0200
+++ New/com/mojang/minecraft/character/Cube.java	2021-08-07 19:46:03.493586900 +0200
@@ -27,8 +27,8 @@
    }
 
    public void addBox(float x0, float y0, float z0, int w, int h, int d) {
-      this.vertices = new Vertex[8];
-      this.polygons = new Polygon[6];
+      vertices = new Vertex[8];
+      polygons = new Polygon[6];
       float x1 = x0 + (float)w;
       float y1 = y0 + (float)h;
       float z1 = z0 + (float)d;
@@ -40,20 +40,20 @@
       Vertex l1 = new Vertex(x1, y0, z1, 0.0F, 8.0F);
       Vertex l2 = new Vertex(x1, y1, z1, 8.0F, 8.0F);
       Vertex l3 = new Vertex(x0, y1, z1, 8.0F, 0.0F);
-      this.vertices[0] = u0;
-      this.vertices[1] = u1;
-      this.vertices[2] = u2;
-      this.vertices[3] = u3;
-      this.vertices[4] = l0;
-      this.vertices[5] = l1;
-      this.vertices[6] = l2;
-      this.vertices[7] = l3;
-      this.polygons[0] = new Polygon(new Vertex[]{l1, u1, u2, l2}, this.xTexOffs + d + w, this.yTexOffs + d, this.xTexOffs + d + w + d, this.yTexOffs + d + h);
-      this.polygons[1] = new Polygon(new Vertex[]{u0, l0, l3, u3}, this.xTexOffs + 0, this.yTexOffs + d, this.xTexOffs + d, this.yTexOffs + d + h);
-      this.polygons[2] = new Polygon(new Vertex[]{l1, l0, u0, u1}, this.xTexOffs + d, this.yTexOffs + 0, this.xTexOffs + d + w, this.yTexOffs + d);
-      this.polygons[3] = new Polygon(new Vertex[]{u2, u3, l3, l2}, this.xTexOffs + d + w, this.yTexOffs + 0, this.xTexOffs + d + w + w, this.yTexOffs + d);
-      this.polygons[4] = new Polygon(new Vertex[]{u1, u0, u3, u2}, this.xTexOffs + d, this.yTexOffs + d, this.xTexOffs + d + w, this.yTexOffs + d + h);
-      this.polygons[5] = new Polygon(new Vertex[]{l0, l1, l2, l3}, this.xTexOffs + d + w + d, this.yTexOffs + d, this.xTexOffs + d + w + d + w, this.yTexOffs + d + h);
+      vertices[0] = u0;
+      vertices[1] = u1;
+      vertices[2] = u2;
+      vertices[3] = u3;
+      vertices[4] = l0;
+      vertices[5] = l1;
+      vertices[6] = l2;
+      vertices[7] = l3;
+      polygons[0] = new Polygon(new Vertex[]{l1, u1, u2, l2}, xTexOffs + d + w, yTexOffs + d, xTexOffs + d + w + d, yTexOffs + d + h);
+      polygons[1] = new Polygon(new Vertex[]{u0, l0, l3, u3}, xTexOffs + 0, yTexOffs + d, xTexOffs + d, yTexOffs + d + h);
+      polygons[2] = new Polygon(new Vertex[]{l1, l0, u0, u1}, xTexOffs + d, yTexOffs + 0, xTexOffs + d + w, yTexOffs + d);
+      polygons[3] = new Polygon(new Vertex[]{u2, u3, l3, l2}, xTexOffs + d + w, yTexOffs + 0, xTexOffs + d + w + w, yTexOffs + d);
+      polygons[4] = new Polygon(new Vertex[]{u1, u0, u3, u2}, xTexOffs + d, yTexOffs + d, xTexOffs + d + w, yTexOffs + d + h);
+      polygons[5] = new Polygon(new Vertex[]{l0, l1, l2, l3}, xTexOffs + d + w + d, yTexOffs + d, xTexOffs + d + w + d + w, yTexOffs + d + h);
    }
 
    public void setPos(float x, float y, float z) {
@@ -63,31 +63,31 @@
    }
 
    public void render() {
-      if (!this.compiled) {
-         this.compile();
+      if (!compiled) {
+         compile();
       }
 
       float c = 57.29578F;
       GL11.glPushMatrix();
-      GL11.glTranslatef(this.x, this.y, this.z);
-      GL11.glRotatef(this.zRot * c, 0.0F, 0.0F, 1.0F);
-      GL11.glRotatef(this.yRot * c, 0.0F, 1.0F, 0.0F);
-      GL11.glRotatef(this.xRot * c, 1.0F, 0.0F, 0.0F);
-      GL11.glCallList(this.list);
+      GL11.glTranslatef(x, y, z);
+      GL11.glRotatef(zRot * c, 0.0F, 0.0F, 1.0F);
+      GL11.glRotatef(yRot * c, 0.0F, 1.0F, 0.0F);
+      GL11.glRotatef(xRot * c, 1.0F, 0.0F, 0.0F);
+      GL11.glCallList(list);
       GL11.glPopMatrix();
    }
 
    private void compile() {
-      this.list = GL11.glGenLists(1);
-      GL11.glNewList(this.list, 4864);
-      GL11.glBegin(7);
+      list = GL11.glGenLists(1);
+      GL11.glNewList(list, GL11.GL_COMPILE);
+      GL11.glBegin(GL11.GL_QUADS);
 
-      for(int i = 0; i < this.polygons.length; ++i) {
-         this.polygons[i].render();
+      for(int i = 0; i < polygons.length; ++i) {
+         polygons[i].render();
       }
 
       GL11.glEnd();
       GL11.glEndList();
-      this.compiled = true;
+      compiled = true;
    }
 }
