--- Old/com/mojang/minecraft/particle/ParticleEngine.java	2021-07-18 13:06:06.665290000 +0200
+++ New/com/mojang/minecraft/particle/ParticleEngine.java	2021-08-07 19:23:10.840155600 +0200
@@ -10,7 +10,7 @@
 
 public class ParticleEngine {
    protected Level level;
-   private List particles = new ArrayList();
+   private List<Particle> particles = new ArrayList<>();
    private Textures textures;
 
    public ParticleEngine(Level level, Textures textures) {
@@ -19,43 +19,43 @@
    }
 
    public void add(Particle p) {
-      this.particles.add(p);
+      particles.add(p);
    }
 
    public void tick() {
-      for(int i = 0; i < this.particles.size(); ++i) {
-         Particle p = (Particle)this.particles.get(i);
+      for(int i = 0; i < particles.size(); ++i) {
+         Particle p = particles.get(i);
          p.tick();
          if (p.removed) {
-            this.particles.remove(i--);
+            particles.remove(i--);
          }
       }
 
    }
 
    public void render(Player player, float a, int layer) {
-      if (this.particles.size() != 0) {
-         GL11.glEnable(3553);
-         int id = this.textures.loadTexture("/terrain.png", 9728);
-         GL11.glBindTexture(3553, id);
-         float xa = -((float)Math.cos((double)player.yRot * 3.141592653589793D / 180.0D));
-         float za = -((float)Math.sin((double)player.yRot * 3.141592653589793D / 180.0D));
-         float xa2 = -za * (float)Math.sin((double)player.xRot * 3.141592653589793D / 180.0D);
-         float za2 = xa * (float)Math.sin((double)player.xRot * 3.141592653589793D / 180.0D);
-         float ya = (float)Math.cos((double)player.xRot * 3.141592653589793D / 180.0D);
+      if (particles.size() != 0) {
+         GL11.glEnable(GL11.GL_TEXTURE_2D);
+         int id = textures.loadTexture("/terrain.png", GL11.GL_NEAREST);
+         GL11.glBindTexture(GL11.GL_TEXTURE_2D, id);
+         float xa = -((float)Math.cos((double)player.yRot * Math.PI / 180.0D));
+         float za = -((float)Math.sin((double)player.yRot * Math.PI / 180.0D));
+         float xa2 = -za * (float)Math.sin((double)player.xRot * Math.PI / 180.0D);
+         float za2 = xa * (float)Math.sin((double)player.xRot * Math.PI / 180.0D);
+         float ya = (float)Math.cos((double)player.xRot * Math.PI / 180.0D);
          Tesselator t = Tesselator.instance;
          GL11.glColor4f(0.8F, 0.8F, 0.8F, 1.0F);
          t.init();
 
-         for(int i = 0; i < this.particles.size(); ++i) {
-            Particle p = (Particle)this.particles.get(i);
+         for(int i = 0; i < particles.size(); ++i) {
+            Particle p = particles.get(i);
             if (p.isLit() ^ layer == 1) {
                p.render(t, a, xa, ya, za, xa2, za2);
             }
          }
 
          t.flush();
-         GL11.glDisable(3553);
+         GL11.glDisable(GL11.GL_TEXTURE_2D);
       }
    }
 }
